{{>disclaimer~}}


# transformation-matrix
Isomorphic 2d transformation matrix functions written in ES6 syntax. Tree shaking ready!

[![Build Status](https://travis-ci.org/chrvadala/transformation-matrix.svg?branch=master)](https://travis-ci.org/chrvadala/transformation-matrix)
[![Coverage Status](https://coveralls.io/repos/github/chrvadala/transformation-matrix/badge.svg?branch=master)](https://coveralls.io/github/chrvadala/transformation-matrix?branch=master)
[![npm](https://img.shields.io/npm/v/transformation-matrix.svg?maxAge=2592000?style=plastic)](https://www.npmjs.com/package/transformation-matrix)
![license-mit](https://img.shields.io/badge/license-MIT-42cd00.svg)
[![Downloads](https://img.shields.io/npm/dm/transformation-matrix.svg)](https://www.npmjs.com/package/transformation-matrix)

## Setup
### NPM
```sh
  npm install transformation-matrix
```
### UMD
```html
<script src="https://unpkg.com/transformation-matrix@1"></script>
```


## Usage example (ES6)
```js

import {scale, rotate, translate, transform, applyToPoint} from 'transformation-matrix';
//or
let {scale, rotate, translate, transform, applyToPoint} = window.TransformationMatrix;


let matrix = transform(
translate(40,40),
rotate(Math.PI/2),
scale(2, 4)
);
let point = applyToPoint(matrix, {x: 42, y: 42});
```
# Reference
{{>main-index~}}

## Changelog
- **0.0** - Preview version
- **1.0** - First public version
- **1.1** - Split lib into different files
- **1.2** - Adds shear operation
- **1.3** - Adds umd support

## Some projects using transformation-matrix
- [**React Planner**](https://github.com/cvdlab/react-planner)
- [**React SVG Pan Zoom**](https://github.com/chrvadala/react-svg-pan-zoom)
- [**Others...**](https://libraries.io/npm/transformation-matrix/dependent-repositories)
- Pull request your project!

## Contributors
- [chrvadala](https://github.com/chrvadala) (author)
- [forabi](https://github.com/forabi) (TypeScript definitions)

# API
{{>all-docs~}}
